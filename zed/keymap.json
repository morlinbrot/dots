[
  {
    "context": "Editor || Terminal",
    "bindings": {
      // Go directly to helix mode.
      "ctrl-h": "vim::HelixNormalAfter",
      // Replace esc with ctrl-j and make sure to always go back to helix mode after.
      "ctrl-j": ["workspace::SendKeystrokes", "escape ctrl-h"],
      "ctrl-c": "editor::ToggleComments",

      "cmd-shift-o": "projects::OpenRecent",
      "cmd-shift-j": "terminal_panel::ToggleFocus",
      "cmd-shift-e": "project_panel::ToggleFocus",
      "cmd-shift-l": "project_panel::ToggleFocus",

      "ctrl-shift-f": "workspace::ToggleZoom",

      // Splits
      "ctrl-shift-enter": "pane::SplitRight",
      "cmd-k h": "pane::SplitLeft",
      "cmd-k j": "pane::SplitDown",
      "cmd-k k": "pane::SplitUp",
      "cmd-k l": "pane::SplitRight",
      "ctrl-shift-n": "workspace::ActivateNextPane",
      "ctrl-shift-p": "workspace::ActivatePreviousPane",
      "cmd-k shift-h": ["workspace::SwapPaneInDirection", "Left"],
      "cmd-k shift-j": ["workspace::SwapPaneInDirection", "Down"],
      "cmd-k shift-k": ["workspace::SwapPaneInDirection", "Up"],
      "cmd-k shift-l": ["workspace::SwapPaneInDirection", "Right"],

      // Tabs
      "alt-h": "pane::ActivatePrevItem",
      "alt-l": "pane::ActivateNextItem",
      "alt-shift-h": "pane::SwapItemLeft",
      "alt-shift-l": "pane::SwapItemRight"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "cmd-shift-k": "terminal_panel::ToggleFocus"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "cmd-shift-j": "terminal_panel::ToggleFocus",
      "cmd-shift-e": "project_panel::ToggleFocus",
      "cmd-shift-l": "project_panel::ToggleFocus",
      "cmd-shift-h": "project_panel::ToggleFocus"
    }
  },
  {
    // Helix mode!!
    "context": "vim_mode == helix_normal",
    "bindings": {
      // "escape": "vim::NormalBefore",
      // With i and a, index is off by one for some reason.
      "i": ["workspace::SendKeystrokes", "escape i"],
      "a": ["workspace::SendKeystrokes", "escape h a"],

      // Editor basics
      "/": "vim::Search",
      "n": "vim::MoveToNextMatch",
      "N": "vim::MoveToPrevMatch",
      "ctrl-o": "pane::GoBack",
      "ctrl-i": "pane::GoForward",
      "g d": "editor::GoToDefinition",
      "g shift-d": "editor::GoToDeclaration",
      "g y": "editor::GoToTypeDefinition",
      "g shift-i": "editor::GoToImplementation",
      "shift-j": "vim::JoinLines",

      // Folds
      "z a": "editor::ToggleFold",
      "z shift-a": "editor::ToggleFoldRecursive",
      "z shift-m": "editor::FoldAll",
      "z shift-r": "editor::UnfoldAll",

      // Modal editing basics
      "c": "vim::Substitute",
      "I": "vim::VisualInsertFirstNonWhiteSpace",
      "A": "vim::VisualInsertEndOfLine",
      "r": ["workspace::SendKeystrokes", "escape r"],
      "z t": "editor::ScrollCursorTop",
      "z z": "editor::ScrollCursorCenter",
      "z b": "editor::ScrollCursorBottom",
      "f": ["vim::PushOperator", { "FindForward": { "before": false } }],
      "t": ["vim::PushOperator", { "FindForward": { "before": true } }],
      "shift-f": ["vim::PushOperator", { "FindBackward": { "after": false } }],
      "shift-t": ["vim::PushOperator", { "FindBackward": { "after": true } }],
      "shift-r": "vim::Paste",
      "ctrl-k": ["workspace::SendKeystrokes", "ctrl-k shift-a"],

      // Buffer manipulation
      "u": "vim::Undo",
      "U": "vim::Redo",
      "p": "vim::Paste",
      "shift-p": ["vim::Paste", { "before": true }],
      "y": "vim::VisualYank",
      // "y": ["workspace::SendKeystrokes", "y escape ctrl-h"],
      "o": "vim::InsertLineBelow",
      "shift-o": "vim::InsertLineAbove",
      ">": "vim::Indent",
      "<": "vim::Outdent",
      "=": "editor::AutoIndent",

      // Helix movements
      "g l": "vim::EndOfLine",
      "g h": "vim::StartOfLine",
      "g g": "vim::StartOfDocument",
      "g e": "vim::EndOfDocument",
      "g s": "vim::FirstNonWhitespace",

      // Helix selections
      "x": "vim::ToggleVisualLine",
      "X": "vim::ToggleVisualLine",
      "v": "vim::ToggleVisual",
      "m m": "vim::Matching",
      "shift-c": "editor::AddSelectionBelow",
      "m i w": ["workspace::SendKeystrokes", "v i w"],
      "m a w": ["workspace::SendKeystrokes", "v a w"],
      "m i \"": ["workspace::SendKeystrokes", "v i \""],
      "m a \"": ["workspace::SendKeystrokes", "v a \""],
      "m i '": ["workspace::SendKeystrokes", "v i '"],
      "m a '": ["workspace::SendKeystrokes", "v a '"],
      "m i (": ["workspace::SendKeystrokes", "v i ("],
      "m a (": ["workspace::SendKeystrokes", "v a ("],
      "m i )": ["workspace::SendKeystrokes", "v i )"],
      "m a )": ["workspace::SendKeystrokes", "v a )"],
      "m i [": ["workspace::SendKeystrokes", "v i ["],
      "m a [": ["workspace::SendKeystrokes", "v a ["],
      "m i ]": ["workspace::SendKeystrokes", "v i ]"],
      "m a ]": ["workspace::SendKeystrokes", "v a ]"],
      "m i {": ["workspace::SendKeystrokes", "v i {"],
      "m a {": ["workspace::SendKeystrokes", "v a {"],
      "m i }": ["workspace::SendKeystrokes", "v i }"],
      "m a }": ["workspace::SendKeystrokes", "v a }"],
      "m i t": ["workspace::SendKeystrokes", "v i t"],
      "m a t": ["workspace::SendKeystrokes", "v a t"],

      // Space mode
      "space f": "file_finder::Toggle",
      "space w": "workspace::Save",
      "space k": "editor::Hover",
      "space a": "editor::ToggleCodeActions",
      "space r": "editor::Rename",
      "space s": "outline::Toggle",
      "space S": "project_symbols::Toggle",
      "space c": "pane::CloseActiveItem",

      // Scrolling
      "ctrl-d": "vim::ScrollDown",
      "ctrl-u": "vim::ScrollUp",
      "ctrl-e": "vim::LineDown",
      "ctrl-y": "vim::LineUp",

      // Window mode.
      "ctrl-w v": "pane::SplitRight",
      "ctrl-w s": "pane::SplitDown",
      "ctrl-w left": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-w right": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-w up": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-w down": ["workspace::ActivatePaneInDirection", "Down"],

      // Personal preferences
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown"
    }
  },
  {
    // All modes except insert.
    "context": "Editor && VimControl && vim_mode != insert && !VimWaiting && !menu",
    "bindings": {
      "c": null, // Nullify vim::Substitute to be able to use "space c"

      "d": "vim::DeleteRight",
      "x": "vim::ToggleVisualLine",
      "X": "vim::ToggleVisualLine",

      ">": "vim::Indent",
      "<": "vim::Outdent",
      "=": "editor::AutoIndent",

      "g l": "vim::EndOfLine",
      "g h": "vim::StartOfLine",
      "g g": "vim::StartOfDocument",
      "g e": "vim::EndOfDocument",
      "g s": "vim::FirstNonWhitespace",

      // "ctrl-w": "editor::SelectLargerSyntaxNode",
      "ctrl-shift-w": "editor::SelectSmallerSyntaxNode",

      "shift-c": "editor::AddSelectionBelow",

      // Space mode
      "space f": "file_finder::Toggle",
      "space w": "workspace::Save",
      "space k": "editor::Hover",
      "space a": "editor::ToggleCodeActions",
      "space r": "editor::Rename",
      "space s": "outline::Toggle",
      "space S": "project_symbols::Toggle",
      "space c": "pane::CloseActiveItem",

      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown",

      // Kitty-like movements between panes.
      "ctrl-shift-l": "workspace::ActivateNextPane",
      "ctrl-shift-h": "workspace::ActivatePreviousPane",

      // Window mode.
      "ctrl-w v": "pane::SplitRight",
      "ctrl-w s": "pane::SplitDown"
    }
  },
  {
    // Normal mode.
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "U": "editor::Redo",
      "ctrl-k": ["workspace::SendKeystrokes", "ctrl-k shift-a"]
    }
  },
  {
    // Visual mode.
    "context": "Editor && !VimWaiting && !menu && vim_mode == visual",
    "bindings": {}
  },
  {
    // Visual Line mode.
    "context": "Editor && VimControl && VimWaiting && !menu && vim_mode == visual_line",
    "bindings": {
      // After selecting lines with 'x' (putting us into visual mode), this removes the selection on move.
      "h": ["workspace::SendKeystrokes", "escape h"],
      "j": ["workspace::SendKeystrokes", "escape j"],
      "k": ["workspace::SendKeystrokes", "escape k"],
      "l": ["workspace::SendKeystrokes", "escape l"],
      "e": ["workspace::SendKeystrokes", "escape e"],
      "w": ["workspace::SendKeystrokes", "escape w"],
      "b": ["workspace::SendKeystrokes", "escape b"]
    }
  },
  {
    // Both visual modes.
    "context": "Editor && vim_mode == visual || vim_mode == visual_line && !VimWaiting && !menu",
    "bindings": {
      "escape": "vim::HelixNormalAfter",

      "c": "vim::Substitute", // Enable what we disabled earlier.

      "shift-r": "vim::Paste",
      "d": "vim::VisualDelete",
      "x": "editor::SelectDown",
      "X": "editor::SelectUp",
      "v": "editor::SelectLargerSyntaxNode",
      "V": "editor::SelectSmallerSyntaxNode"
    }
  },
  {
    // Insert mode.
    "context": "Editor && vim_mode == insert && !VimWaiting",
    "bindings": {
      "escape": "vim::HelixNormalAfter",

      "ctrl-d": "vim::DeleteRight",
      "ctrl-h": "vim::DeleteLeft",
      "ctrl-r": "editor::Paste"
    }
  },
  {
    "context": "Editor && vim_operator == g && !VimWaiting && !menu",
    "bindings": {
      // "x": "editor::AddSelectionBelow"
    }
  }
]
